// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "KMT provides rest endpoints to help clients to get monitoring data from a Kubernetes cluster.",
    "title": "Kubernetes Monitoring Tool (KMT)",
    "version": "1.0.0"
  },
  "basePath": "/api/kmt",
  "paths": {
    "/v1/pods": {
      "get": {
        "description": "For example:\n` + "`" + `` + "`" + `` + "`" + `\nGET /api/kmt/v1/pods\nGET /api/kmt/v1/pods?namespace=databricks\n` + "`" + `` + "`" + `` + "`" + `\n\nReturns list of pods with their status:\n` + "`" + `` + "`" + `` + "`" + `\n[\n  {\n      \"name\": \"pod-1\",\n      \"status\": \"running\",\n      \"nodeId\": \"node01\"\n  },\n  {\n      \"name\": \"pod-2\",\n      \"status\": \"CrashLoopBackOff\",\n      \"nodeId\": \"node02\"\n  },\n  ...\n  ...\n]\n` + "`" + `` + "`" + `` + "`" + `\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "k8s-monitoring-tool"
        ],
        "summary": "Gets all pods statistics running in the k8s cluster",
        "parameters": [
          {
            "type": "string",
            "description": "Pass if pods status for a specific namespace is desired; otherwise all pods across all namespaces are returned.",
            "name": "namespace",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetching of all pod status is successful.",
            "schema": {
              "$ref": "#/definitions/Pods"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Pod": {
      "description": "A pod",
      "type": "object",
      "required": [
        "name",
        "status"
      ],
      "properties": {
        "name": {
          "description": "Pod name",
          "type": "string"
        },
        "status": {
          "description": "Pod status",
          "type": "object",
          "$ref": "#/definitions/PodStatus"
        }
      }
    },
    "PodStatus": {
      "description": "A pod",
      "type": "object",
      "required": [
        "phase",
        "description",
        "podIp",
        "hostIp"
      ],
      "properties": {
        "description": {
          "description": "Details about why the pod is in this condition.",
          "type": "string"
        },
        "hostIp": {
          "description": "IP address of the host to which the pod is assigned",
          "type": "string"
        },
        "phase": {
          "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle (Pending, Running, Failed, Unknown)",
          "type": "string"
        },
        "podIp": {
          "description": "IP address allocated to the pod",
          "type": "string"
        }
      }
    },
    "Pods": {
      "description": "Array of pod items",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Pod"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "KMT provides rest endpoints to help clients to get monitoring data from a Kubernetes cluster.",
    "title": "Kubernetes Monitoring Tool (KMT)",
    "version": "1.0.0"
  },
  "basePath": "/api/kmt",
  "paths": {
    "/v1/pods": {
      "get": {
        "description": "For example:\n` + "`" + `` + "`" + `` + "`" + `\nGET /api/kmt/v1/pods\nGET /api/kmt/v1/pods?namespace=databricks\n` + "`" + `` + "`" + `` + "`" + `\n\nReturns list of pods with their status:\n` + "`" + `` + "`" + `` + "`" + `\n[\n  {\n      \"name\": \"pod-1\",\n      \"status\": \"running\",\n      \"nodeId\": \"node01\"\n  },\n  {\n      \"name\": \"pod-2\",\n      \"status\": \"CrashLoopBackOff\",\n      \"nodeId\": \"node02\"\n  },\n  ...\n  ...\n]\n` + "`" + `` + "`" + `` + "`" + `\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "k8s-monitoring-tool"
        ],
        "summary": "Gets all pods statistics running in the k8s cluster",
        "parameters": [
          {
            "type": "string",
            "description": "Pass if pods status for a specific namespace is desired; otherwise all pods across all namespaces are returned.",
            "name": "namespace",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetching of all pod status is successful.",
            "schema": {
              "$ref": "#/definitions/Pods"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Pod": {
      "description": "A pod",
      "type": "object",
      "required": [
        "name",
        "status"
      ],
      "properties": {
        "name": {
          "description": "Pod name",
          "type": "string"
        },
        "status": {
          "description": "Pod status",
          "type": "object",
          "$ref": "#/definitions/PodStatus"
        }
      }
    },
    "PodStatus": {
      "description": "A pod",
      "type": "object",
      "required": [
        "phase",
        "description",
        "podIp",
        "hostIp"
      ],
      "properties": {
        "description": {
          "description": "Details about why the pod is in this condition.",
          "type": "string"
        },
        "hostIp": {
          "description": "IP address of the host to which the pod is assigned",
          "type": "string"
        },
        "phase": {
          "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle (Pending, Running, Failed, Unknown)",
          "type": "string"
        },
        "podIp": {
          "description": "IP address allocated to the pod",
          "type": "string"
        }
      }
    },
    "Pods": {
      "description": "Array of pod items",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Pod"
      }
    }
  }
}`))
}
