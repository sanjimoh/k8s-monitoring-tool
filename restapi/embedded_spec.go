// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "KMT provides rest endpoints to help clients to get monitoring data from a Kubernetes cluster.",
    "title": "Kubernetes Monitoring Tool (KMT)",
    "version": "1.0.0"
  },
  "basePath": "/api/kmt",
  "paths": {
    "/v1/pod": {
      "put": {
        "description": "For example:\n` + "`" + `` + "`" + `` + "`" + `\nPUT /api/kmt/v1/pod\n` + "`" + `` + "`" + `` + "`" + `\n\nSample request body will be:\n\n` + "`" + `` + "`" + `` + "`" + `\n{\n  \"name\": \"apache-cassandra\",\n  \"namespace\": \"default\",\n  \"replicas\": \"5\",\n  \"image\": \"ccas-apache:2.5\"\n}\n` + "`" + `` + "`" + `` + "`" + `\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "k8s-monitoring-tool"
        ],
        "summary": "Update a pod configuration running in the k8s cluster",
        "parameters": [
          {
            "description": "New Pod deployment request body.",
            "name": "PodDeployment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PodDeployment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pod deployment updated successfully.",
            "schema": {
              "$ref": "#/definitions/PodDeployment"
            }
          },
          "400": {
            "description": "Bad Request, Unable to update pod deployment.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/pods": {
      "get": {
        "description": "For example:\n` + "`" + `` + "`" + `` + "`" + `\nGET /api/kmt/v1/pods\nGET /api/kmt/v1/pods?namespace=databricks\nGET /api/kmt/v1/pods?namespace=databricks\u0026cpuThreshold=3\u0026memoryThreshold=1073741824\n` + "`" + `` + "`" + `` + "`" + `\n\nReturns list of pods with their status:\n` + "`" + `` + "`" + `` + "`" + `\n[\n  {\n    \"name\": \"pod-1\",\n    \"namespace\": \"databricks\",\n    \"labels\": \"app:pod-1\",\n    \"status\": {\n      \"phase\": \"Running\",\n      \"description\": \"Pod is running\",\n      \"podIp\": \"192.1.1.1\",\n      \"hostIp\": \"string\"\n    },\n    \"containers\": [\n       {\n         \"name\": \"container-0\",\n         \"currentCpuUsage\": \"\",\n         \"currentMemoryUsage\": \"\"\n       }\n     ]\n  },\n  {\n    \"name\": \"pod-2\",\n    \"namespace\": \"databricks\",\n    \"labels\": \"app:pod-2\",\n    \"status\": {\n      \"phase\": \"Pending\",\n      \"description\": \"Pending due to lack of resources\",\n      \"podIp\": \"\",\n      \"hostIp\": \"\"\n    },\n   \"containers\": [\n      {\n        \"name\": \"container-1\",\n        \"currentCpuUsage\": \"\",\n        \"currentMemoryUsage\": \"\"\n      }\n    ]\n  },\n  ...\n]\n` + "`" + `` + "`" + `` + "`" + `\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "k8s-monitoring-tool"
        ],
        "summary": "Gets all pods statistics running in the k8s cluster",
        "parameters": [
          {
            "type": "string",
            "description": "Pass if pods status for a specific namespace is desired; otherwise all pods across all namespaces are returned.",
            "name": "namespace",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pass if you wish to fetch pods which are breaching the given cpuThreshold.",
            "name": "cpuThreshold",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pass byte value as string. Pass if you wish to fetch pods which are breaching the given memoryThreshold.",
            "name": "memoryThreshold",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetching of all pod status is successful.",
            "schema": {
              "$ref": "#/definitions/Pods"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Pod": {
      "description": "A pod",
      "type": "object",
      "required": [
        "name",
        "namespace",
        "status",
        "containers"
      ],
      "properties": {
        "containers": {
          "description": "Pod containers",
          "type": "object",
          "$ref": "#/definitions/PodContainers"
        },
        "labels": {
          "description": "A string of labels associated with the pod in the format key1:value1,key2:value2,...",
          "type": "string"
        },
        "name": {
          "description": "Pod name",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace in which Pod exists",
          "type": "string"
        },
        "status": {
          "description": "Pod status",
          "type": "object",
          "$ref": "#/definitions/PodStatus"
        }
      }
    },
    "PodContainer": {
      "description": "A pod container",
      "type": "object",
      "required": [
        "name",
        "currentCpuUsage",
        "currentMemoryUsage"
      ],
      "properties": {
        "currentCpuUsage": {
          "description": "Current CPU usage of the container.",
          "type": "string"
        },
        "currentMemoryUsage": {
          "description": "Current memory usage of the container.",
          "type": "string"
        },
        "name": {
          "description": "Name of the container",
          "type": "string"
        }
      }
    },
    "PodContainers": {
      "description": "Array of pod container",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PodContainer"
      }
    },
    "PodDeployment": {
      "description": "A pod deployment to update",
      "type": "object",
      "properties": {
        "affinityKey": {
          "description": "Label key used for pods scheduling anti-affinity rule.",
          "type": "string"
        },
        "affinityValues": {
          "description": "Comma separated label selector key values for pods scheduling anti-affinity rule.",
          "type": "string"
        },
        "image": {
          "description": "Provide the new image name, version.",
          "type": "string"
        },
        "name": {
          "description": "Provide the name of the pod deployment.",
          "type": "string"
        },
        "namespace": {
          "description": "Provide the namespace of the pod deployment.",
          "type": "string"
        },
        "replicas": {
          "description": "Provide the number of replicas to modify.",
          "type": "string"
        }
      }
    },
    "PodStatus": {
      "description": "A pod",
      "type": "object",
      "required": [
        "phase",
        "description",
        "podIp",
        "hostIp"
      ],
      "properties": {
        "description": {
          "description": "Details about why the pod is in this condition.",
          "type": "string"
        },
        "hostIp": {
          "description": "IP address of the host to which the pod is assigned",
          "type": "string"
        },
        "phase": {
          "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle (Pending, Running, Failed, Unknown)",
          "type": "string"
        },
        "podIp": {
          "description": "IP address allocated to the pod",
          "type": "string"
        }
      }
    },
    "Pods": {
      "description": "Array of pod items",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Pod"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "KMT provides rest endpoints to help clients to get monitoring data from a Kubernetes cluster.",
    "title": "Kubernetes Monitoring Tool (KMT)",
    "version": "1.0.0"
  },
  "basePath": "/api/kmt",
  "paths": {
    "/v1/pod": {
      "put": {
        "description": "For example:\n` + "`" + `` + "`" + `` + "`" + `\nPUT /api/kmt/v1/pod\n` + "`" + `` + "`" + `` + "`" + `\n\nSample request body will be:\n\n` + "`" + `` + "`" + `` + "`" + `\n{\n  \"name\": \"apache-cassandra\",\n  \"namespace\": \"default\",\n  \"replicas\": \"5\",\n  \"image\": \"ccas-apache:2.5\"\n}\n` + "`" + `` + "`" + `` + "`" + `\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "k8s-monitoring-tool"
        ],
        "summary": "Update a pod configuration running in the k8s cluster",
        "parameters": [
          {
            "description": "New Pod deployment request body.",
            "name": "PodDeployment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PodDeployment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pod deployment updated successfully.",
            "schema": {
              "$ref": "#/definitions/PodDeployment"
            }
          },
          "400": {
            "description": "Bad Request, Unable to update pod deployment.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/pods": {
      "get": {
        "description": "For example:\n` + "`" + `` + "`" + `` + "`" + `\nGET /api/kmt/v1/pods\nGET /api/kmt/v1/pods?namespace=databricks\nGET /api/kmt/v1/pods?namespace=databricks\u0026cpuThreshold=3\u0026memoryThreshold=1073741824\n` + "`" + `` + "`" + `` + "`" + `\n\nReturns list of pods with their status:\n` + "`" + `` + "`" + `` + "`" + `\n[\n  {\n    \"name\": \"pod-1\",\n    \"namespace\": \"databricks\",\n    \"labels\": \"app:pod-1\",\n    \"status\": {\n      \"phase\": \"Running\",\n      \"description\": \"Pod is running\",\n      \"podIp\": \"192.1.1.1\",\n      \"hostIp\": \"string\"\n    },\n    \"containers\": [\n       {\n         \"name\": \"container-0\",\n         \"currentCpuUsage\": \"\",\n         \"currentMemoryUsage\": \"\"\n       }\n     ]\n  },\n  {\n    \"name\": \"pod-2\",\n    \"namespace\": \"databricks\",\n    \"labels\": \"app:pod-2\",\n    \"status\": {\n      \"phase\": \"Pending\",\n      \"description\": \"Pending due to lack of resources\",\n      \"podIp\": \"\",\n      \"hostIp\": \"\"\n    },\n   \"containers\": [\n      {\n        \"name\": \"container-1\",\n        \"currentCpuUsage\": \"\",\n        \"currentMemoryUsage\": \"\"\n      }\n    ]\n  },\n  ...\n]\n` + "`" + `` + "`" + `` + "`" + `\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "k8s-monitoring-tool"
        ],
        "summary": "Gets all pods statistics running in the k8s cluster",
        "parameters": [
          {
            "type": "string",
            "description": "Pass if pods status for a specific namespace is desired; otherwise all pods across all namespaces are returned.",
            "name": "namespace",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pass if you wish to fetch pods which are breaching the given cpuThreshold.",
            "name": "cpuThreshold",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pass byte value as string. Pass if you wish to fetch pods which are breaching the given memoryThreshold.",
            "name": "memoryThreshold",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Fetching of all pod status is successful.",
            "schema": {
              "$ref": "#/definitions/Pods"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Pod": {
      "description": "A pod",
      "type": "object",
      "required": [
        "name",
        "namespace",
        "status",
        "containers"
      ],
      "properties": {
        "containers": {
          "description": "Pod containers",
          "type": "object",
          "$ref": "#/definitions/PodContainers"
        },
        "labels": {
          "description": "A string of labels associated with the pod in the format key1:value1,key2:value2,...",
          "type": "string"
        },
        "name": {
          "description": "Pod name",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace in which Pod exists",
          "type": "string"
        },
        "status": {
          "description": "Pod status",
          "type": "object",
          "$ref": "#/definitions/PodStatus"
        }
      }
    },
    "PodContainer": {
      "description": "A pod container",
      "type": "object",
      "required": [
        "name",
        "currentCpuUsage",
        "currentMemoryUsage"
      ],
      "properties": {
        "currentCpuUsage": {
          "description": "Current CPU usage of the container.",
          "type": "string"
        },
        "currentMemoryUsage": {
          "description": "Current memory usage of the container.",
          "type": "string"
        },
        "name": {
          "description": "Name of the container",
          "type": "string"
        }
      }
    },
    "PodContainers": {
      "description": "Array of pod container",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PodContainer"
      }
    },
    "PodDeployment": {
      "description": "A pod deployment to update",
      "type": "object",
      "properties": {
        "affinityKey": {
          "description": "Label key used for pods scheduling anti-affinity rule.",
          "type": "string"
        },
        "affinityValues": {
          "description": "Comma separated label selector key values for pods scheduling anti-affinity rule.",
          "type": "string"
        },
        "image": {
          "description": "Provide the new image name, version.",
          "type": "string"
        },
        "name": {
          "description": "Provide the name of the pod deployment.",
          "type": "string"
        },
        "namespace": {
          "description": "Provide the namespace of the pod deployment.",
          "type": "string"
        },
        "replicas": {
          "description": "Provide the number of replicas to modify.",
          "type": "string"
        }
      }
    },
    "PodStatus": {
      "description": "A pod",
      "type": "object",
      "required": [
        "phase",
        "description",
        "podIp",
        "hostIp"
      ],
      "properties": {
        "description": {
          "description": "Details about why the pod is in this condition.",
          "type": "string"
        },
        "hostIp": {
          "description": "IP address of the host to which the pod is assigned",
          "type": "string"
        },
        "phase": {
          "description": "The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle (Pending, Running, Failed, Unknown)",
          "type": "string"
        },
        "podIp": {
          "description": "IP address allocated to the pod",
          "type": "string"
        }
      }
    },
    "Pods": {
      "description": "Array of pod items",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Pod"
      }
    }
  }
}`))
}
