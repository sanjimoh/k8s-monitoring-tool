// Code generated by go-swagger; DO NOT EDIT.

package k8s_monitoring_tool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetV1alpha1PodsLogHandlerFunc turns a function with the right signature into a get v1alpha1 pods log handler
type GetV1alpha1PodsLogHandlerFunc func(GetV1alpha1PodsLogParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV1alpha1PodsLogHandlerFunc) Handle(params GetV1alpha1PodsLogParams) middleware.Responder {
	return fn(params)
}

// GetV1alpha1PodsLogHandler interface for that can handle valid get v1alpha1 pods log params
type GetV1alpha1PodsLogHandler interface {
	Handle(GetV1alpha1PodsLogParams) middleware.Responder
}

// NewGetV1alpha1PodsLog creates a new http.Handler for the get v1alpha1 pods log operation
func NewGetV1alpha1PodsLog(ctx *middleware.Context, handler GetV1alpha1PodsLogHandler) *GetV1alpha1PodsLog {
	return &GetV1alpha1PodsLog{Context: ctx, Handler: handler}
}

/* GetV1alpha1PodsLog swagger:route GET /v1alpha1/pods/log k8s-monitoring-tool getV1alpha1PodsLog

Gets logs of the given pod in the given namespace.

For example:
```
GET /api/kmt/v1alpha1/pods/log?namespace=databricks&name=cassandra
```

Returns list of pods with their status:
```
```


*/
type GetV1alpha1PodsLog struct {
	Context *middleware.Context
	Handler GetV1alpha1PodsLogHandler
}

func (o *GetV1alpha1PodsLog) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetV1alpha1PodsLogParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
